/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package convertnfatodfa;

import java.awt.Font;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import javax.swing.ImageIcon;
import javax.imageio.ImageIO;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import javax.swing.table.DefaultTableCellRenderer;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class MainFrame extends JFrame {

    private File imageFile;
    private BufferedImage img;
    private Image dimg;
    private ImageIcon imageIcon;
    char [][] connectionNFA;
    private Map <Character, Integer> allCharacters;
    private final char epsilon = 'Îµ';
    private String currentPath;
    private int numberOfStates;

    private DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
    private DefaultTableModel tableModel;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        super("Visualization of the convert NFA to DFA thaThomson's Construction");
        initComponents();
        setLocationRelativeTo(null);
        setSize(1000, 700);
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        informationPanel.setVisible(false);
        this.tableModel = (DefaultTableModel) move_information_table.getModel();
        allCharacters = new HashMap<>();
    }

    void errorMessage(String message) {
        JLabel label = new JLabel(message);
        label.setFont(new Font("Arial", Font.BOLD, 16));
        JOptionPane.showMessageDialog(null, label, "Error", JOptionPane.ERROR_MESSAGE);
    }

    private int optionMessage(String message) {
        int dialogResult = JOptionPane.showConfirmDialog(null, message, "Warning", JOptionPane.YES_NO_OPTION);
        return dialogResult;
    }

    private void deleteRowInTable(int row_number) {
        if (optionMessage("Do you want to delete move?\nAre you sure?") == JOptionPane.YES_OPTION) {
            int from = Integer.parseInt(move_information_table.getValueAt(row_number, 0).toString().substring(1));
            int to = Integer.parseInt(move_information_table.getValueAt(row_number, 1).toString().substring(1));
            Integer temp = allCharacters.get(connectionNFA[from][to]);
            if(temp != null && temp < 2){
                allCharacters.remove(connectionNFA[from][to]);
            }else if(temp != null){
                allCharacters.put(connectionNFA[from][to], allCharacters.get(connectionNFA[from][to]) - 1);
            }
                
            connectionNFA[from][to] = '0';
            tableModel.removeRow(row_number);
        } else {
            tableModel.setValueAt(false, row_number, 3);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton = new javax.swing.JButton();
        informationPanel = new javax.swing.JPanel();
        number_of_states_text = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        number_of_states_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        move_information_table = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        from_state_list = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        to_state_list = new javax.swing.JList<>();
        add_move_button = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        move_value_list = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        move_value_text = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1000, 700));
        setSize(new java.awt.Dimension(1000, 700));

        mainPanel.setMinimumSize(new java.awt.Dimension(1000, 700));
        mainPanel.setPreferredSize(new java.awt.Dimension(1000, 700));

        jLabel.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel.setForeground(new java.awt.Color(51, 51, 255));
        jLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel.setText("<html><center>Welcome To The<br>NFA(Non-Deterministic Finite Automaton)<br>To DFA(Deterministic Finite Automaton)<br>Converter</center></html>");
        jLabel.setToolTipText("");

        jLabel1.setSize(80, 90);
        currentPath = null;
        try{
            currentPath = new java.io.File( "." ).getCanonicalPath();
        }catch(Exception e){
            System.err.println("Cann't read path image file.");
        }
        imageFile = new File(currentPath + "\\src\\convertnfatodfa\\ImamUlogoMeta.png");
        img = null;
        try {
            img = ImageIO.read(imageFile);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        dimg = img.getScaledInstance(jLabel1.getWidth(), jLabel1.getHeight(),
            Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(dimg);
        jLabel1.setIcon(imageIcon);

        jLabel2.setSize(290, 90);
        currentPath = null;
        try{
            currentPath = new java.io.File( "." ).getCanonicalPath();
        }catch(Exception e){
            System.err.println("Cann't read path image file.");
        }
        String fileName = currentPath + "\\src\\convertnfatodfa\\collegeBanner.png";
        imageFile = new File(fileName);
        img = null;
        try {
            img = ImageIO.read(imageFile);
        } catch (IOException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

        dimg = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(),
            Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(dimg);
        jLabel2.setIcon(imageIcon);
        jLabel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 0));
        jLabel3.setText("<html><center>Supervised by:<br>Dr. Mohamed El-Zawawy</center></html>");
        jLabel3.setToolTipText("");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel3.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 0));
        jLabel4.setText("<html><center>Proposed by:<br>Abd Alrahman Mofid Yabrak</center></html>");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel4.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        jButton.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton.setText("Continue");
        jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 968, Short.MAX_VALUE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addComponent(jButton)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        informationPanel.setMinimumSize(new java.awt.Dimension(1000, 700));
        informationPanel.setPreferredSize(new java.awt.Dimension(1000, 700));

        number_of_states_text.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        number_of_states_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        number_of_states_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number_of_states_textActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Move information");
        jLabel5.setToolTipText("");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel5.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("NFA Information ");
        jLabel6.setToolTipText("");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel6.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        number_of_states_button.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        number_of_states_button.setText("Ok");
        number_of_states_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                number_of_states_buttonActionPerformed(evt);
            }
        });

        move_information_table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ((DefaultTableCellRenderer)move_information_table.getTableHeader().getDefaultRenderer())
        .setHorizontalAlignment(JLabel.CENTER);
        move_information_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "From state", "To state", "Value", "Delete"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        move_information_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                move_information_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(move_information_table);
        if (move_information_table.getColumnModel().getColumnCount() > 0) {
            move_information_table.getColumnModel().getColumn(0).setCellRenderer(centerRenderer);
            move_information_table.getColumnModel().getColumn(1).setCellRenderer(centerRenderer);
            move_information_table.getColumnModel().getColumn(2).setCellRenderer(centerRenderer);
        }

        from_state_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "From state" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        from_state_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(from_state_list);

        to_state_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "To state" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(to_state_list);

        add_move_button.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add_move_button.setText("Add move");
        add_move_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_move_buttonActionPerformed(evt);
            }
        });

        move_value_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Move Value", "Suggested Values", "epsilon(Îµ)", "a", "b", "c", "d", "e", "0", "1", "2", "3", "4" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(move_value_list);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("<html><center>Enter your value<br>If not found in suggested values</center></htmal>");
        jLabel7.setToolTipText("");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel7.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Number of states");
        jLabel8.setToolTipText("");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jLabel8.setDebugGraphicsOptions(javax.swing.DebugGraphics.FLASH_OPTION);

        move_value_text.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        move_value_text.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(204, 0, 0));
        jButton1.setText("Delete all moves");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton2.setText("Show DFA ");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButton3.setText("Show NFA");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout informationPanelLayout = new javax.swing.GroupLayout(informationPanel);
        informationPanel.setLayout(informationPanelLayout);
        informationPanelLayout.setHorizontalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(389, 389, 389))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))))
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addGap(114, 114, 114)
                                .addComponent(move_value_text, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32)
                        .addComponent(add_move_button, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(number_of_states_text, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(number_of_states_button, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                                .addComponent(jButton1)))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(25, 25, 25))
        );
        informationPanelLayout.setVerticalGroup(
            informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(informationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(number_of_states_text, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(number_of_states_button, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(informationPanelLayout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(move_value_text, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1)))
                    .addGroup(informationPanelLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(add_move_button, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(informationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(79, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(informationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.setVisible(false);
        informationPanel.setVisible(true);
    }//GEN-LAST:event_jButtonActionPerformed

    public int checkPositiveIntegerNumber(){
        int numberOfStates;
        try {
            numberOfStates = Integer.parseInt(number_of_states_text.getText());
            if(numberOfStates <= 0){
                errorMessage("Please enter a non-zero positive integer");
                return -1;
            }
        } catch (Exception e) {
            errorMessage("Please enter a non-zero positive integer");
            return -1;
        }
        return numberOfStates;
    }
    private void number_of_states_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number_of_states_buttonActionPerformed
        // TODO add your handling code here:
        numberOfStates = checkPositiveIntegerNumber();
        if(numberOfStates == -1){
            return;
        }
        String [] from = new String[numberOfStates + 1]; 
        from[0] = "From state";
        for (int i = 0; i < numberOfStates; i++) {
            from[i+1] = ""+i;
        }
        from_state_list.setListData(from);
        String[] to = Arrays.copyOf(from, numberOfStates + 1);
        to[0] = "To state";
        to_state_list.setListData(to);
        connectionNFA = new char[numberOfStates][numberOfStates];
        for (char[] cs : connectionNFA) {
            Arrays.fill(cs, '0');
        }
    }//GEN-LAST:event_number_of_states_buttonActionPerformed

    public void addCharacter(char character){
        if(character != epsilon && allCharacters.get(character) == null)
            allCharacters.put(character, 1);
        else if(character != epsilon)
            allCharacters.put(character, allCharacters.get(character) + 1);
    }
    
    public boolean checkOnMove(int from, int to, char value){
        //This method to check if move is already defined in table.
        //If exist return true else false
        if(connectionNFA[from][to] == value){
            errorMessage("This move is already defined in the table.");
            return true;
        }
        if(connectionNFA[from][to] != value && connectionNFA[from][to] != '0'){
            errorMessage("This move is already defined in the table but with another value. "
                    + "Please delete the old value from the table so you can add the new value for move.");
            return true;
        }
        return false;
    }
    private void add_move_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_move_buttonActionPerformed
        // TODO add your handling code here:
        if(from_state_list.getModel().getSize() == 1 && to_state_list.getModel().getSize() == 1){
            //if not choose number of states stop the work.
            errorMessage("Please enter the number of states and press \"Ok\" then choose valid states.");
            return;
        }
        if(from_state_list.getSelectedIndex() > 0 && to_state_list.getSelectedIndex() > 0){
            Object[] o = null ;
            int from = -1, to = -1; 
            char actualValue = '0';
            if(move_value_text.getText().isEmpty() && move_value_list.getSelectedIndex() > 1){
                from = from_state_list.getSelectedIndex() - 1;
                to = to_state_list.getSelectedIndex() - 1;
                if(move_value_list.getSelectedIndex() == 2){
                    actualValue = epsilon;
                    o = new Object[]{"S"+(from), "S"+(to), actualValue, false};
                }else{
                    actualValue = move_value_list.getSelectedValue().charAt(0);
                    o = new Object[]{"S"+(from), "S"+(to), actualValue, false};
                }
            }else if(move_value_text.getText().isEmpty() && move_value_list.getSelectedIndex() < 2){
                errorMessage("Please chosse a value from the suggested values or enter your own.");
                return;
            }else if(!move_value_text.getText().isEmpty()){
                String value = move_value_text.getText();
                if(!value.matches("[A-Za-z0-9$]")){
                    errorMessage("Please enter a value from 0 to 9, a to z (small), or A to Z (capital).");
                    return;
                }
                actualValue = value.charAt(0);
                o = new Object[]{"S"+(from), "S"+(to), actualValue, false};
            }
            if(!checkOnMove(from, to, actualValue)){
                connectionNFA[from][to] = actualValue;
                if(actualValue != epsilon)    
                    addCharacter(actualValue);                
                tableModel.addRow(o);
            }
        }else{
            errorMessage("Please selecte valid states.");
        }
    }//GEN-LAST:event_add_move_buttonActionPerformed

    private void number_of_states_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_number_of_states_textActionPerformed
        // TODO add your handling code here:
        number_of_states_button.doClick();
    }//GEN-LAST:event_number_of_states_textActionPerformed

    private void move_information_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_move_information_tableMouseClicked
        // TODO add your handling code here:
        if(move_information_table.getSelectedColumn() == 3)
            deleteRowInTable(move_information_table.getSelectedRow());
            
    }//GEN-LAST:event_move_information_tableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(move_information_table.getRowCount() == 0)
            return;
        
        for (int i = move_information_table.getRowCount()-1; i >= 0; i--) {
            tableModel.removeRow(i);
        }
        allCharacters.clear();
        for (char[] cs : connectionNFA) {
            Arrays.fill(cs, '0');
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    Visualization frame = null;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(move_information_table.getRowCount() < 1){
            errorMessage("Please enter move information.");
            return;
        }
        int numberOfStates = checkPositiveIntegerNumber();
        if(numberOfStates == -1)
            return;
        convertNFAToDFA convertNFATODFA = new convertNFAToDFA(numberOfStates);
        convertNFATODFA.setConnectionNFA(connectionNFA);
        ArrayList<Character> c = new ArrayList<>();
        for (Character character : allCharacters.keySet()) {
            c.add(character);
        }
        convertNFATODFA.setAllCharacters(c);
        convertNFATODFA.convert();
        
        if(frame != null){
            frame.deleteGraph();
            frame.dispose();
            frame = null;
        }
        frame = new Visualization();
        frame.drawGraphDFA(convertNFATODFA.getStatesDFA(), numberOfStates, convertNFATODFA.getConnectionDFA());
        frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if(move_information_table.getRowCount() < 1){
            errorMessage("Please enter move information.");
            return;
        }
        convertNFAToDFA convertNFATODFA = new convertNFAToDFA(numberOfStates);
        convertNFATODFA.setConnectionNFA(connectionNFA);
        ArrayList<Character> c = new ArrayList<>();
        for (Character character : allCharacters.keySet()) {
            c.add(character);
        }
        convertNFATODFA.setAllCharacters(c);
//        convertNFATODFA.convert();
        
        if(frame != null){
            frame.deleteGraph();
            frame.dispose();
            frame = null;
        }
        frame = new Visualization();
        frame.drawGraphNFA(numberOfStates, connectionNFA);
        frame.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_move_button;
    private javax.swing.JList<String> from_state_list;
    private javax.swing.JPanel informationPanel;
    private javax.swing.JButton jButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable move_information_table;
    private javax.swing.JList<String> move_value_list;
    private javax.swing.JTextField move_value_text;
    private javax.swing.JButton number_of_states_button;
    private javax.swing.JTextField number_of_states_text;
    private javax.swing.JList<String> to_state_list;
    // End of variables declaration//GEN-END:variables
}
